version: '2.1'
services:
  reverse-proxy:
    image: traefik:v2.2
    command: --api.insecure=true --providers.docker --accesslog=true --entrypoints.web.address=:80 --entrypoints.websecure.address=:443 --certificatesresolvers.myresolver.acme.email=sizief@gmail.com --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    labels:
      - traefik.http.routers.api.rule=Host(`dev-traefik.pomodoro.works`)
      - traefik.http.routers.api.service=api@internal
  db:
    image: postgres:9.4.5
    env_file:
      - ./api/.env.dev
    volumes:
      - /var/lib/postgresql/9.5/main:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "psql -h localhost -p 5432 -U postgres -v ON_ERROR_STOP=1 -c 'select version()' &> /dev/null"]
        test: ["CMD-SHELL", "pg_isready -U postgres"] #Are you really up?
        interval: 2s
        timeout: 30s
        retries: 15
  api:
    volumes:
      - ./api:/var/www/pomodoro
    build:
      context: ./api
    links:
      - db:db
    ports:
      - 4000:4000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./api/.env.dev
    tty: true
    stdin_open: true
    labels:
      - traefik.http.routers.pomodoro_api.rule=Host(`dev-api.pomodoro.works`)
  app:
    volumes:
      - ./app:/var/www/pomodoro
    build:
      context: ./app
    ports:
     - 3000:3000
    depends_on:
      - api
    env_file:
      - ./app/.env
    environment:
      - REACT_APP_API_ENDPOINT=http://dev-api.pomodoro.works
    tty: true
    stdin_open: true
    labels:
      - traefik.http.routers.app.rule=Host(`dev.pomodoro.works`)
      - traefik.protocol=https
